Todos los codigos:


git init // inicia proycto seuusa solo una vez 
git status // muestra lo que ya subimos o lo que nos falta por subir 
git add // adiciona carpetas 
git commit -m "mensaje" /// asigna cmentarios de lo que cambiamos 
git log /// miestra todos los commit que hicimos 
git checkout 
git reset --soft  //no borra codigo  
git reset --mixed // avanzado 
git reset --hard   //borra todo

git branch /// mustra las ramas 
git branch nombre // crea una rama 
git checkout // moverse en las ramas 
git branch -d // borra ramas 
git merge Rama // adiciona toda la rama en la rama que estamos pocicionados

git remote add origin link_github // conectar con github git remote -v // ver nuestra conexion

git remote remove origin // eliminar repositorio remoto

git push origin master // enviar cambios a github
Issues : Son una forma de continuar, mejorar o solucionar un error en nuestros repositorios (proyectos)
Milestones : Son grupos de issues que aplican para un proyecto, característica o periodo de tiempo.
Labels: son una manera de organizar distintos tipos de problemas.

git commit --amend -m “aquí escribo mi commit”

	Solo sirve cuando el commit se acaba de hacer, si tu intentas ir a un commit pasado y cambiar el nombre del commit git marcara que cambiaste el commit pero cuando regreses a master en la posición actual y hagas un "git log", verás que el cambio no se hizo.

	git push origin master -f
		-f sierve para que se fuerce levantar los cambios porque al ser una modificacion de un commit git nos dirá que no hubo 
		cambios, por ende al hacer con -f se forzará a levantar los cambios  


git fetch origin
	descarga la actualizacion remota a la rama origin/master (ésta rama está oculta y es el espejo que se encuentra en un repositorio remoto)

git merge origin/master
	mezcla los cambios con la rama oculta (origin/master) con la rama master(HEAD)

